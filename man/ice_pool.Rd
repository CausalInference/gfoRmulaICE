% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ICE_pool.R
\name{ice_pool}
\alias{ice_pool}
\title{ICE Pooling Over Treatment History Estimator including Both Classical and Hazard-Based Versions for A Single
Intervention Strategy.}
\usage{
ice_pool(
  data,
  K,
  id,
  time_name,
  outcome_name,
  censor_name = NULL,
  competing_name = NULL,
  total_effect,
  outcome_model,
  censor_model = NULL,
  competing_model = NULL,
  interventions,
  intervention_names,
  intervention_times = NULL,
  compute_nc_risk = T,
  hazard_based,
  intervention_description
)
}
\arguments{
\item{data}{a data frame containing the observed data in long format.}

\item{K}{a numerical value that indicates the total number of time points.}

\item{id}{a character string indicating the ID variable name in \code{data}.}

\item{time_name}{a character string indicating the time variable name in \code{data}.}

\item{outcome_name}{a character string indicating the outcome variable name in \code{data}.}

\item{censor_name}{a character string indicating the censor variable name in \code{data}.
Could be \code{NULL} if there is no censoring variable in \code{data}. Default is \code{NULL}.}

\item{competing_name}{a character string indicating the competing variable name in \code{data}.
Could be \code{NULL} if there is no competing variable in \code{data}. Default is \code{NULL}.}

\item{total_effect}{a logical indicating how the competing event is handled. TRUE for total effect. FALSE for direct effect.}

\item{outcome_model}{a formula specifying the model statement for the outcome model.}

\item{censor_model}{a formula specifying the model statement for the censoring model in IP weighted natural course risk.
Could be \code{NULL} if censoring variable \code{censor_name} is \code{NULL}. Default is \code{NULL}.}

\item{competing_model}{a formula specifying the model statement for the competing model in hazard based ICE estimator.
Could be \code{NULL} for classical ICE estimator. Default is \code{NULL}.}

\item{interventions}{a list of functions indicating intervention strategy for the intervention variables in \code{intervention_names}.
Interventions could be specified using the following functions:
\itemize{
\item{Always treat:} {\code{static(value = 1)} }
\item{Never treat:} {\code{static(value = 0)} }
\item{Natural course:} {\code{natural_course()} }
\item{Dynamic treat:} {\code{dynamic(type, var, direction, value)} }
\item{Threshold Intervention:} {\code{threshold(value, var)}}
\item{Grace period:} {\code{grace_period(type, nperiod, var, value)} }
}
For more details, please read the corresponding documentation of each intervention function.
If the length of the \code{interventions} list is larger than 1, then the function will process them as multiple treatments simultaneously.
The user defined intervention functions must return the intervened value as a vector in the length of the number of rows in \code{data}.
The user defined intervention functions in \code{interventions} must be in corresponding order of \code{intervention_varnames}.
The same logic applies for the built in intervention functions.}

\item{intervention_names}{a list of character strings indicating the intervention variable names in correspondence with the intervention strategies in \code{interventions}.
Length of the vector must be in the same size of \code{interventions}.}

\item{compute_nc_risk}{a logical to indicate whether to compute observed natural course risk. TRUE for observed natural course risk computation. FALSE for no natural course risk computation. Default to be TRUE.}

\item{hazard_based}{a logical indicating whether to use hazard-based ICE estimator or classical ICE estimator. TRUE for hazard-based estimator. FALSE for classical estimator.}

\item{intervention_description}{a character string specifying a description of the implemented intervention strategy.}
}
\value{
A list containing the following components:
\item{gformula_risk_last_time} {The estimated risk for the specified intervention(s) at the last time step.}
\item{gformula_risk} {A table containing the estimated risk for the specified intervention(s) at each time step.}
\item{weight_h} {A list containing the inverse probability weighted estimates of the natural course risk. Could be \code{NULL} if \code{compute_nc_risk} is FALSE.}
\item{ipw_model} {A model object for the probability of censoring used in the inverse probability weighted estimate of the natural course risk. Could be \code{NULL} if \code{compute_nc_risk} is FALSE.}
\item{fit_models}{A list containing the fitted models for the outcome, the treatment (if applicable), and the competing event (if applicable).}
\item{model_summary}{A list containing the summary of the fitted models.}
\item{model_stderr}{A list containing the standard errors of the coefficients of the fitted models.}
\item{model_vcov}{A list containing the variance-covariance matrices of the parameters of the fitted models.}
\item{model_rmse}{A list containing the root mean square error (RMSE) values of the fitted models.}
}
\description{
This function estimates the risk over time for survival outcome using the given observed data set following
a single user-defined intervention strategy by the parametric g-formula iterative conditional expectation (ICE)
estimator. This function provides the classical ICE pooling over treatment history method
and the hazard based ICE pooling over treatment history method.
}
\examples{

# Import data set
test_data <- readRDS("test_data_competing.rds")

# Estimate risks for the always treat intervention
(i.e. constantly treat over all time points)
# using hazard extended pooled ICE
# competing event as direct effect

ice_static <- ice_pool(data = test_data, K = 5, id = "id",
time_name = "t0", outcome_name = "Y",
competing_name = "D", censor_name = "C",
total_effect = F,
outcome_model = Y ~ L1 + A,
censor_model = C ~ L1 + A,
competing_model = D ~ L1 + A,
interventions = list(static(1)),
intervention_names = list("A"),
hazard_based = T,
intervention_description = "Always Treat")

ice_static

# Estimate risks for both the observed inverse probability weighted
# natural course risk and natural course strategy
# Classical pooled ICE, competing event as total effect

ice_natural_course <- ice_pool(data = test_data, K = 5, id = "id",
time_name = "t0", outcome_name = "Y",
competing_name = "D", censor_name = "C",
total_effect = T,
outcome_model = Y ~ L1 + A,
censor_model = C ~ L1 + A,
interventions = list(natural_course()),
intervention_names = list("A"),
compute_nc_risk = T,
hazard_based = F,
intervention_description = "Natural Course")

ice_natural_course

# Estimate risks for the dynamic treat intervention
# based on the covariate L1 > 0
# (i.e. treat when L1 > 0 and absorbing once one initiates treatment;
# not treat otherwise)
# Classical pooled ICE, competing event as direct effect

ice_dynamic <- ice_pool(data = test_data, K = 5, id = "id",
time_name = "t0", outcome_name = "Y",
competing_name = "D", censor_name = "C",
total_effect = F,
outcome_model = Y ~ L1 + A,
censor_model = C ~ L1 + A,
interventions = list(dynamic("absorbing", "L1", ">", 0)),
intervention_names = list("A"),
hazard_based = F,
intervention_description = "Dynamic Treat")

ice_dynamic

# Estimate risks for the dynamic intervention where treat when L1 = 0
# with uniform grace period of 2 periods
# Hazard extended pooled ICE, competing event as total effect

ice_grace_period <- ice_pool(data = test_data, K = 5, id = "id",
time_name = "t0", outcome_name = "Y",
competing_name = "D", censor_name = "C",
total_effect = T,
outcome_model = Y ~ L1 + A,
censor_model = C ~ L1 + A,
competing_model = D ~ L1 + A,
interventions = list(grace_period("uniform", 2, "L1", 0)),
intervention_names = list("A"),
hazard_based = T,
intervention_description = "Dynamic Treat Grace Period")

ice_grace_period

# Estimate risks for the threshold intervention where
# when the natural value of treatment A at time t is lower
# than -3, set its value to -3. Otherwise, do not intervene.
# Hazard extended pooled ICE, competing event as total effect

ice_threshold <- ice_pool(data = test_data, K = 5, id = "id",
time_name = "t0", outcome_name = "Y",
competing_name = "D", censor_name = "C",
total_effect = T,
outcome_model = Y ~ L1 + A,
censor_model = C ~ L1 + A,
competing_model = D ~ L1 + A,
interventions = list(threshold(-3)),
intervention_names = list("A"),
hazard_based = T,
intervention_description = "Threshold Intervention")

ice_threshold
}
\references{
Wen L, Young JG, Robins JM, Hernán MA. Parametric g-formula implementations for causal survival analyses. Biometrics. 2021;77(2):740-753.

McGrath S, Lin V, Zhang Z, Petito LC, Logan RW, Hernán MA, and JG Young. gfoRmula: An R package for estimating the effects of sustained treatment strategies via the parametric g-formula. Patterns. 2020;1:100008.

Young JG, Herńan MA, Robins JM. Identification, estimation and approximation of risk under interventions that depend on the natural value of treatment using observational data. Epidemiologic Methods. 2014;3(1):1-19.

Young JG, Vatsa R, Murray EJ, Hernán MA. Interval-cohort designs and bias in the estimation of per-protocol effects: a simulation study. Trials. 2019;20(1):552.

Díaz, I, Williams, N, Hoffman, KL, & Schenck, EJ. Nonparametric causal effects based on longitudinal modified treatment policies. Journal of the American Statistical Association. 2021;118(542), 846–857.

Young JG, Stensrud MJ, Tchetgen Tchetgen EJ, Hernán MA. A causal framework for classical statistical estimands in failure-time settings with competing events. Statistics in medicine. 2020;39(8):1199-1236.

Wen L, Hernán MA, Robins JM. Multiply robust estimators of causal effects for survival outcomes. Scandinavian journal of statistics, theory and applications. 2022;49(3):1304-1328.

Haneuse S, Rotnitzky A. Estimation of the effect of interventions that modify the received treatment. Statistics in medicine. 2013;32(30):5260-5277.

McGrath S, Young JG, Hernán MA. Revisiting the g-null Paradox. Epidemiology. 2022;33(1):114-120.
}
\keyword{internal}
